#include<iostream>
using namespace std;

int main() {

    int  t, n;
    cin >> t;

    int demical[10001]={0};

    while (t > 0) {
        t--;
        cin >> n;
        // n 까지의 소수 구하기 -> 아리스토테네스의 체
        demical[1] = 1; //1은 소수도 합성수도 아니다.
        for (int i = 2; (i*i) <= n; i++) {
            if (!demical[i]) {
                for (int j = i*2; j <= n; j += i) {
                    demical[j] = 1;    // 소수가 아니면 1 
                }
            }
        }

        int a, b, tmp;
        for (int i = n/2; i >=2; i--) {
            if (demical[i] == 0 && demical[n - i] == 0)
            {
                cout << i << ' ' << n - i << '\n';
                break;
            }
        }
    }
    return 0;
}


/*
[설명]
- n을 받으면 n까지의 수 중 소수를 먼저 모두 구해주었습니다. 
- 소수를 빠르게 구하는 방법인 아리스토테네스의 체를 이용하였습니다. ( 소수의 배수를 모두 제거해서 소수만 남기는 방식 )
-  두번째 for문에서 합이 n이 되는 수는 구해주었습니다. 
- 여러가지 경우가 있다면 차가 작은 수를 출력해야하기 때문에 n을 2로 나눈 절반 부터 감소하는 방식으로 for문을 돌렸습니다.
- 소수인지 저장하는 배열에서 모두 소수라고 판별되면 그 수를 출력해주고 for문을 빠져나옵니다.
- 두 번의 틀렸습니다! 
   -  한번은 아리스토테네스를 구현하는 코드에서 j를 i+1로 시작해야하는데 i부터 시작하게 해서 소수를 잘 못 저장하고 있었습니다.
   -  다른 한번은 합이 n 이 되는 두 소수의 차가 작은 두 수를 출력해야하는데 이 부분을 고려하지 않고 출력을 했습니다.
*/
